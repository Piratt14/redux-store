{"version":3,"sources":["components/shop-header/index.js","components/shop-header/shop-header.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.js","actions/index.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list/book-list.js","components/book-list/index.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/pages/home-page.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundary/index.js","components/error-boundary/error-boundry.js","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["ShopHeader","numItems","total","className","to","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","bookAddedToCart","bookId","type","payload","fetchBooks","dispatch","getBooks","then","data","catch","err","compose","funcs","comp","reduceRight","wrapped","f","Spinner","ErrorIndicator","BookList","books","map","key","id","BookListContainer","this","loading","error","Component","connect","bookList","mapDispatchToProps","onIncrease","onDecrease","onDelete","ShoppingCartTable","shoppingCart","items","cartItems","orderTotal","item","idx","count","HomePage","CartPage","App","role","length","path","component","exact","ErrorBoundary","state","hasError","setState","children","BookstoreService","Promise","resolve","setTimeout","updateBookList","action","undefined","updateOrder","quantity","find","itemIndex","findIndex","newItems","slice","updateCartItems","updateCartItem","reduce","sum","cur","updateShoppingCart","reducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.a03d4a6a.chunk.js","sourcesContent":["import ShopHeader from './shop-header';\r\n\r\nexport default ShopHeader;","import React from 'react';\r\nimport './shop-header.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ShopHeader = ({ numItems, total }) => {\r\n    return (\r\n        <header className=\"shop-header row\">\r\n            <Link className=\"logo text-dark\" to=\"/\">ReStore</Link>\r\n            <Link to=\"/cart\">\r\n                <div className=\"shopping-cart\">\r\n                    <i className=\"cart-icon fa fa-shopping-cart\" />\r\n                    {numItems} items (${total})\r\n                </div>\r\n            </Link>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default ShopHeader;\r\n","import BookListItem from \"./book-list-item\";\r\n\r\nexport default BookListItem;\r\n","import React from \"react\";\r\n\r\nimport './book-list-item.css';\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n    const { title, author, price, coverImage } = book;\r\n\r\n    return (\r\n        <div className=\"book-list-item\">\r\n            <div className=\"book-cover\">\r\n                <img src={coverImage} alt=\"cover book\" />\r\n            </div>\r\n            <div className=\"book-details\">\r\n                <span className=\"book-title\">{title}</span>\r\n                <div className=\"book-author\">{author}</div>\r\n                <div className=\"book-price\">{price}</div>\r\n                <button\r\n                    onClick={onAddedToCart}\r\n                    className=\"btn btn-info add-to-cart\">\r\n                    Add to cart\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookListItem;\r\n","import React from 'react';\r\n\r\nconst {\r\n  Provider: BookstoreServiceProvider,\r\n  Consumer: BookstoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  BookstoreServiceProvider,\r\n  BookstoreServiceConsumer\r\n};\r\n","import React from 'react';\r\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <BookstoreServiceConsumer>\r\n                {\r\n                    (bookstoreService) => {\r\n                        return (<Wrapped {...props}\r\n                                         bookstoreService={bookstoreService}/>);\r\n                    }\r\n                }\r\n            </BookstoreServiceConsumer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withBookstoreService;\r\n","\r\nconst booksRequested = () => {\r\n    return {\r\n        type: 'FETCH_BOOKS_REQUEST'\r\n    };\r\n};\r\n\r\nconst booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks,\r\n    };\r\n};\r\n\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_FAILURE',\r\n        payload: error,\r\n    };\r\n};\r\n\r\nconst bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId,\r\n    };\r\n};\r\n\r\nconst bookRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_REMOVED_FROM_CART',\r\n        payload: bookId,\r\n    };\r\n};\r\n\r\nconst allBooksRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n        payload: bookId,\r\n    };\r\n};\r\n\r\nconst fetchBooks = (bookstoreService, dispatch) => () => {\r\n    dispatch(booksRequested());\r\n    bookstoreService.getBooks()\r\n        .then((data) => dispatch(booksLoaded(data)))\r\n        .catch((err) => dispatch(booksError(err)));\r\n};\r\n\r\nexport {\r\n    booksLoaded,\r\n    booksRequested,\r\n    booksError,\r\n    fetchBooks,\r\n    bookAddedToCart,\r\n    bookRemovedFromCart,\r\n    allBooksRemovedFromCart,\r\n};\r\n","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n};\r\n\r\nexport default compose;\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return <div>loading...</div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;\r\n","import React from 'react';\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n    return <div>Error!</div>;\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import React, { Component } from \"react\";\r\nimport BookListItem from \"../book-list-item\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withBookstoreService } from '../hoc';\r\nimport { fetchBooks, bookAddedToCart } from \"../../actions\";\r\nimport { compose } from \"../../utils\";\r\nimport './book-list.css';\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nconst BookList = ({ books, onAddedToCart }) => {\r\n    return (\r\n        <ul className=\"book-list\">\r\n            {\r\n                books.map((book) => {\r\n                    return (\r\n                        <li key={book.id}>\r\n                            <BookListItem\r\n                                onAddedToCart={() => onAddedToCart(book.id)}\r\n                                book={book}/>\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBooks();\r\n    }\r\n\r\n    render() {\r\n        const { books, loading, error, onAddedToCart } = this.props;\r\n        if (loading) {\r\n            return <Spinner/>;\r\n        }\r\n\r\n        if (error) {\r\n            return <ErrorIndicator/>;\r\n        }\r\n\r\n        return <BookList books={books} onAddedToCart={onAddedToCart}/>;\r\n    }\r\n}\r\n\r\n//  эта функция описывает какие данных компонент хочет получить из REDUX STORE\r\nconst mapStateToProps = ({ bookList: { books, loading, error }}) => {\r\n    return {\r\n        books,\r\n        loading,\r\n        error,\r\n    };\r\n};\r\n\r\n//  описывает то какие действия захочет выполнить компонент, какие действия будет передавать в STORE\r\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\r\n    return {\r\n        fetchBooks: fetchBooks(bookstoreService, dispatch),\r\n        onAddedToCart: (id) => dispatch(bookAddedToCart(id)),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withBookstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer);\r\n","import BookList from \"./book-list\";\r\n\r\nexport default BookList;\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport { bookAddedToCart, bookRemovedFromCart, allBooksRemovedFromCart } from \"../../actions\";\r\nimport './shopping-cart-table.css';\r\n\r\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\r\n    const renderRow = (item, idx) => {\r\n        const { id, title, count, total } = item;\r\n        return (\r\n            <tr key={id}>\r\n                <td>{idx + 1}</td>\r\n                <td>{title}</td>\r\n                <td>{count}</td>\r\n                <td>${total}</td>\r\n                <td>\r\n                    <button\r\n                        onClick={() => onDelete(id)}\r\n                        className=\"btn btn-outline-danger btn-sm float-right\">\r\n                        <i className=\"fa fa-trash-o\" />\r\n                    </button>\r\n                    <button\r\n                        onClick={() => onIncrease(id)}\r\n                        className=\"btn btn-outline-success btn-sm float-right\">\r\n                        <i className=\"fa fa-plus-circle\" />\r\n                    </button>\r\n                    <button\r\n                        onClick={() => onDecrease(id)}\r\n                        className=\"btn btn-outline-warning btn-sm float-right\">\r\n                        <i className=\"fa fa-minus-circle\" />\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"shopping-cart-table\">\r\n            <h2>Your Order</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Item</th>\r\n                        <th>Count</th>\r\n                        <th>Price</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                { items.map(renderRow) }\r\n                </tbody>\r\n            </table>\r\n\r\n            <div className=\"total\">\r\n                Total: ${total}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal }}) => {\r\n    return {\r\n        items: cartItems,\r\n        total: orderTotal,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n        onIncrease: bookAddedToCart,\r\n        onDecrease: bookRemovedFromCart,\r\n        onDelete: allBooksRemovedFromCart,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\r\n","import ShoppingCartTable from './shopping-cart-table';\r\n\r\nexport default ShoppingCartTable;\r\n","import React from 'react';\r\nimport BookList from \"../book-list\";\r\nimport ShoppingCartTable from \"../shopping-cart-table\";\r\n\r\nconst HomePage = () => {\r\n\r\n    return (\r\n        <div>\r\n            <BookList />\r\n            <ShoppingCartTable />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nconst CartPage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Cart page</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartPage;\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './app.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ShopHeader from \"../shop-header\";\r\nimport { HomePage, CartPage } from \"../pages\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst App = ({ items, total }) => {\r\n    return (\r\n        <main role=\"main\" className=\"container\">\r\n            <ShopHeader numItems={items.length} total={total}/>\r\n            <Switch>\r\n                <Route path=\"/\" component={HomePage} exact/>\r\n                <Route path=\"/cart\" component={CartPage}/>\r\n            </Switch>\r\n        </main>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal }}) => {\r\n    return {\r\n        items: cartItems,\r\n        total: orderTotal,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import ErrorBoundary from './error-boundry';\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    };\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator />;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n","\r\nexport default class BookstoreService {\r\n\r\n    data = [\r\n        {\r\n            id: 1,\r\n            title: 'Production-Ready Microservices',\r\n            author: 'Susan J. Fowler',\r\n            price: 32,\r\n            coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Release It!',\r\n            author: 'Michael T. Nygard',\r\n            price: 45,\r\n            coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg',\r\n        },\r\n    ];\r\n\r\n    getBooks() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.data);\r\n            }, 700);\r\n        });\r\n    }\r\n\r\n}\r\n","const updateBookList = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            books: [],\r\n            loading: true,\r\n            error: null,\r\n        };\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'FETCH_BOOKS_REQUEST':\r\n            return {\r\n                books: [],\r\n                loading: true,\r\n                error: null,\r\n            };\r\n\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null,\r\n            };\r\n\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return {\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n\r\n        default:\r\n            return state.bookList;\r\n    }\r\n\r\n};\r\n\r\nexport default updateBookList;\r\n","const updateCartItems = (cartItems, item, idx) => {\r\n\r\n    if (item.count === 0) {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            ...cartItems.slice(idx + 1),\r\n        ];\r\n    }\r\n\r\n    if (idx === -1) {\r\n        return [\r\n            ...cartItems,\r\n            item,\r\n        ];\r\n    }\r\n\r\n    return [\r\n        ...cartItems.slice(0, idx),\r\n        item,\r\n        ...cartItems.slice(idx + 1),\r\n    ];\r\n};\r\n\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n\r\n    //  если item === undefined(то есть не найден в массиве корзины)\r\n    //  то ему присваивается пустой объект, а затем объект деструктурируеся\r\n    //  на элементы и если это был пустой объект то срабатываютс значения по умолчанию\r\n    const {\r\n        id = book.id,\r\n        count = 0,\r\n        title = book.title,\r\n        total = 0,\r\n    } = item;\r\n\r\n    return {\r\n        id,\r\n        title,\r\n        count: count + quantity,\r\n        total: total + quantity*book.price,\r\n    }\r\n};\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n    const { bookList: { books }, shoppingCart: { cartItems } } = state;\r\n\r\n    const book = books.find(({id}) => id === bookId);\r\n    const itemIndex = cartItems.findIndex(({id}) => id === bookId);\r\n    const item = cartItems[itemIndex];\r\n\r\n    const newItem = updateCartItem(book, item, quantity);\r\n    const newItems = updateCartItems(cartItems, newItem, itemIndex);\r\n    return {\r\n        cartItems: newItems,\r\n        orderTotal: newItems.reduce((sum,cur) => sum + cur.total, 0),\r\n    };\r\n};\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0,\r\n        };\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'BOOK_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1);\r\n\r\n        case 'BOOK_REMOVED_FROM_CART':\r\n            return updateOrder(state, action.payload, -1);\r\n\r\n        case 'ALL_BOOKS_REMOVED_FROM_CART':\r\n            const item = state.shoppingCart.cartItems.find(({id}) => id === action.payload);\r\n            return updateOrder(state, action.payload, -item.count);\r\n\r\n        default:\r\n            return state.shoppingCart;\r\n    }\r\n\r\n};\r\n\r\nexport default updateShoppingCart;\r\n","import updateBookList from \"./book-list\";\r\nimport updateShoppingCart from \"./shopping-cart\";\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    return {\r\n        bookList: updateBookList(state, action),\r\n        shoppingCart: updateShoppingCart(state, action),\r\n    };\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\n\r\nimport reducer from \"./reducers\";\r\n\r\n//const store = createStore(reducer,,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n/* eslint-disable no-underscore-dangle */\r\nconst store = createStore(\r\n    reducer, /* preloadedState, */\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n/* eslint-enable */\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./components/app\";\r\nimport ErrorBoundary from \"./components/error-boundary\";\r\nimport BookstoreService from \"./services/bookstore-service\";\r\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\r\n\r\nimport store from \"./store\";\r\n\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ErrorBoundary>\r\n            <BookstoreServiceProvider value={bookstoreService}>\r\n                <Router>\r\n                    <App />\r\n                </Router>\r\n            </BookstoreServiceProvider>\r\n        </ErrorBoundary>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}